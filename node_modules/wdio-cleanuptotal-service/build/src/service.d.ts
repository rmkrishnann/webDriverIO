/// <reference types="webdriverio/async" />
export default class CleanupTotalService {
    browser: WebdriverIO.Browser;
    _serviceOptions: {
        customLoggerMethod: Function;
    };
    /**
     * `serviceOptions` contains all options specific to the service
     * e.g. if defined as follows:
     *
     * ```
     * services: [['custom', { foo: 'bar' }]]
     * ```
     *
     * the `serviceOptions` parameter will be: `{ foo: 'bar' }`
     */
    constructor(serviceOptions: {
        customLoggerMethod: Function;
    }, capabilities: any, config: any, browser: WebdriverIO.Browser);
    before(config: any, capabilities: any): void;
    beforeTest(test: any, context: any): void;
    beforeScenario(test: any, context: any): void;
    afterTest(test: any, context: any, { error, result, duration, passed, retries }: any): Promise<void>;
    afterScenario({ result }: any): Promise<void>;
    after(exitCode: any, config: any, capabilities: any): Promise<void>;
}
