import TestResultContainer from "./test-result-container";
interface IAdaptiveCard {
    type: "message";
    attachments: Array<ICardAttachment>;
}
interface ICardAttachment {
    contentType: "application/vnd.microsoft.card.adaptive";
    contentUrl: string | null;
    content: IAdaptiveCardContent;
}
interface IAdaptiveCardContent {
    $schema: "http://adaptivecards.io/schemas/adaptive-card.json";
    type: "AdaptiveCard";
    version: "1.2";
    body: Array<ICardContainer | ITextBlock | IFactSet | IRichTextBlock>;
    msteams?: {
        width: "full";
    };
}
interface ICardContainer {
    type: "Container";
    padding: string;
    items: Array<ITextBlock | IFactSet>;
}
interface ITextBlock {
    type: "TextBlock";
    text: string;
    wrap?: boolean;
    weight?: "lighter" | "default" | "bolder";
}
interface IFactSet {
    type: "FactSet";
    facts: Array<{
        title: string;
        value: string;
    }>;
    spacing: "none" | "small" | "default" | "medium" | "large" | "extraLarge";
}
interface IRichTextBlock {
    type: "RichTextBlock";
    inlines: Array<string | ITextRun>;
    horizontalAlignment?: "left" | "center" | "right";
}
interface ITextRun {
    type: "TextRun";
    text: string;
    color?: "default" | "dark" | "light" | "accent" | "good" | "warning" | "attention";
    fontType?: "default" | "monospace";
    highlight?: boolean;
    isSubtle?: true;
    italic?: boolean;
    size?: "default" | "small" | "medium" | "large" | "extraLarge";
    strikethrough?: boolean;
    underline?: boolean;
    weight: "default" | "lighter" | "bolder";
}
export declare class AdaptiveCard {
    private readonly _card;
    constructor(message: string, resultContainer: TestResultContainer);
    content(): IAdaptiveCard;
    toString(): string;
    private static _generateFactsOverview;
    private static _generateTextBlock;
    private static _generateFactSet;
}
export {};
//# sourceMappingURL=adaptive-card.d.ts.map